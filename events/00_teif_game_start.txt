namespace = game_start

### Hidden Game Start Event
event = {
	id = game_start.1
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		set_global_flag = game_started

		every_country = {
			limit = { is_ai = no }
			country_event = { id = country.900 days = 460 random = 60 }
		}

		### SPAWN INVISIBLE GLOBAL EVENT COUNTRY
		if = {
			limit = { NOT = { exists = event_target:global_event_country } }
			create_country = {
				name = "NAME_global_event_country"
				type = global_event
				effect = {
					save_global_event_target_as = global_event_country
					give_technology = { tech = tech_adaptive_combat_algorithms message = no }
					give_technology = { tech = tech_biomechanics message = no }
					give_technology = { tech = tech_robomodding_m message = no }
					give_technology = { tech = tech_binary_motivators message = no }
					give_technology = { tech = tech_nanite_assemblers message = no }
					give_technology = { tech = tech_micro_replicators message = no }
					give_technology = { tech = tech_self_assembling_components message = no }
				}
			}
		}

		### SPAWN SPECIAL COUNTRIES
		create_country = {
			name = "NAME_The_Shroud"
			type = shroud
			flag = {
				icon = {
					category = "special"
					file = "the_shroud.dds"
				}
				background= {
					category = "backgrounds"
					file = "00_solid.dds"
				}
				colors={
					"red"
					"black"
					"null"
					"null"
				}
			}
		}

		### HANDLE EMPIRE RELATIONS
		every_country = {
			limit = {
				has_country_flag = fallen_empire_machine
			}
			every_country = {
				limit = {
					is_country_type = drone
				}
				set_faction_hostility = {
					target = prev
					set_hostile = no
					set_neutral = no
					set_friendly = yes
				}
			}
		}

		every_country = {
			limit = {
				is_country_type = tiyanki
			}
			every_country = {
				limit = {
					OR = {
						is_country_type = amoeba
						is_country_type = crystal
						is_country_type = cloud
					}
				}
				set_faction_hostility = {
					target = prev
					set_hostile = no
					set_neutral = yes
					set_friendly = no
				}
			}
		}

		### MARAUDER FLAGS
		every_country = {
			limit = { is_country_type = dormant_marauders }
			randomize_flag_symbol = "pirate"
		}

		### MARAUDERS SHOULD NOT ATTACK ENCLAVES
		every_country = {
			limit = { is_country_type = enclave }
			every_country = {
				limit = { is_country_type = dormant_marauders }
				set_faction_hostility = {
					target = prev
					set_hostile = no
					set_neutral = no
					set_friendly = yes
				}
			}
		}

		every_country = {
			limit = { has_ethic = ethic_gestalt_consciousness }
			every_country = {
				limit = { has_civic = civic_gestalt_terminator }
				set_closed_borders = {
					who = prev
					status = yes
				}
			}
		}
		### ORIGINS

		# Scion
		every_playable_country = {
			limit = { has_origin = origin_scion }
			country_event = { id = origin.5 }
		}

		# Common Ground & Hegemon
		every_playable_country = {
			limit = { 
				OR = {
					has_origin = origin_common_ground
					has_origin = origin_hegemon
				}
			}
			country_event = { id = origin.55 }
		}

		# Doomsday
		every_playable_country = {
			limit = { has_origin = origin_doomsday }
			country_event = { id = origin.60 }
		}

		# Lost Colony
		every_playable_country = {
			limit = { 
				has_origin = origin_lost_colony
				NOT = { has_country_flag = human_2 }
			}
			country_event = { id = origin.100 }
		}

		# Galactic Doorstep
		every_playable_country = {
			limit = { has_origin = origin_galactic_doorstep }
			country_event = { id = origin.1001 }
		}

		# On the Shoulders of Giants
		every_playable_country = {
			limit = { has_origin = origin_shoulders_of_giants }
			country_event = { id = origin.1199 }
		}
	}
}

### Empire init - add ships
country_event = {
	id = game_start.9
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		if = {
			limit = {
				NOR = {
					has_origin = origin_fallen_empire_01
					has_origin = origin_fallen_empire_02
					has_origin = origin_fallen_empire_03
					has_origin = origin_fallen_empire_04
					has_origin = origin_fallen_empire_05
					has_origin = origin_fallen_empire_06
					has_origin = origin_the_road_not_taken
				}
			}
			#science
			create_fleet = {
				effect = {
					set_owner = prev
	
					create_ship = {
						name = random
						random_existing_design = science
					}
	
					set_fleet_stance = evasive
					#set_location = prev.capital_star
					set_location = prev.capital_scope.star
	
					owner = {
						create_leader = {
							class = scientist
							sub_type = survey
							name = random
							species = owner_main_species
						}
					}
					set_leader = last_created_leader
				}
			}
	
			#constructor
			create_fleet = {
				effect = {
					set_owner = prev
	
					create_ship = {
						name = random
						random_existing_design = constructor
					}
	
					set_fleet_stance = evasive
					set_location = prev.capital_star
				}
			}
	
			#military
			create_fleet = {
				set_take_point = yes
				effect = {
					set_owner = prev
	
					while = {
						count = 3
						create_ship = {
							name = random
							random_existing_design = corvette
						}
					}
	
					set_location = prev.capital_star
				}
			}
		}
	}
}

# Game start - Fallen Empires
country_event = {
	id = game_start.10
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		is_country_type = fallen_empire
	}

	immediate = {
		create_ship_design = { design = "NAME_FE_Starbase" }
		add_ship_design = last_created_design
		add_resource = {
			minerals = 300000
			energy = 300000	
			alloys = 300000
			food = 300000
			influence = 500
			rare_crystals = 10
			exotic_gases = 10
			volatile_motes = 10
			sr_dark_matter = 10
			sr_living_metal = 10
			sr_zro = 10
		}
		if = {
			limit = {
				count_country = {
					count >= 2
					limit = {
						OR = {
							has_country_flag = fallen_empire_1
							has_country_flag = fallen_empire_3
							has_country_flag = fallen_empire_7
						}
					}
				}
				count_country = {
					count >= 2
					limit = {
						OR = {
							has_country_flag = fallen_empire_2
							has_country_flag = fallen_empire_4
							has_country_flag = fallen_empire_5
						}
					}
				}
			}
			random_list = {
				1 = {
					set_global_flag = galactic_war_happened
				}
				1 = {}
			}
		}
		add_modifier = {
			modifier = fe_ship_cost_modifier
			days = -1
		}
		if = {
			limit = {
				is_fallen_empire_machine = no
			}
			give_technology = { tech = tech_adaptive_combat_algorithms message = no }
			give_technology = { tech = tech_biomechanics message = no }
			give_technology = { tech = tech_robomodding_m message = no }
			give_technology = { tech = tech_binary_motivators message = no }
			give_technology = { tech = tech_nanite_assemblers message = no }
			give_technology = { tech = tech_micro_replicators message = no }
			give_technology = { tech = tech_self_assembling_components message = no }
			every_owned_pop_species = {
				set_living_standard = {
					type = living_standard_utopian
					country = root
					cooldown = no
				}
			}
		}
		if = {
			limit = { is_ai = yes }
			switch = {
				trigger = has_ethic
				ethic_gestalt_consciousness = {
					create_ship_design = { design = "NAME_Omega" }
					add_ship_design = last_created_design
					create_ship_design = { design = "NAME_Alpha" }
					add_ship_design = last_created_design
					create_ship_design = { design = "NAME_Beta" }
					add_ship_design = last_created_design
					create_ship_design = { design = "NAME_Gamma" }
					add_ship_design = last_created_design
					create_ship_design = { design = "NAME_Sigma" }
					add_ship_design = last_created_design
					give_technology = { message = no tech = tech_pk_neutron }
				}
				ethic_fanatic_materialist = { 
					create_ship_design = { design = "NAME_Enforcer" }
					add_ship_design = last_created_design
					create_ship_design = { design = "NAME_Savant" }
					add_ship_design = last_created_design
					create_ship_design = { design = "NAME_Scholar" }
					add_ship_design = last_created_design
					create_ship_design = { design = "NAME_Sage" }
					add_ship_design = last_created_design
					create_ship_design = { design = "NAME_Cloaker" }
					add_ship_design = last_created_design
					give_technology = { message = no tech = tech_pk_shielder }
				}
				ethic_fanatic_spiritualist = { 
					create_ship_design = { design = "NAME_Cleanser" }
					add_ship_design = last_created_design
					create_ship_design = { design = "NAME_Eternal" }
					add_ship_design = last_created_design
					create_ship_design = { design = "NAME_Avatar" }
					add_ship_design = last_created_design
					create_ship_design = { design = "NAME_Zealot" }
					add_ship_design = last_created_design
					create_ship_design = { design = "NAME_Faith" }
					add_ship_design = last_created_design
					give_technology = { message = no tech = tech_pk_neutron }
				}
				ethic_fanatic_xenophile = { 
					create_ship_design = { design = "NAME_Adjuster" }
					add_ship_design = last_created_design
					create_ship_design = { design = "NAME_Keeper" }
					add_ship_design = last_created_design
					create_ship_design = { design = "NAME_Custodian" }
					add_ship_design = last_created_design
					create_ship_design = { design = "NAME_Warden" }
					add_ship_design = last_created_design
					create_ship_design = { design = "NAME_Watcher" }
					add_ship_design = last_created_design
					give_technology = { message = no tech = tech_pk_shielder }
				}
				ethic_fanatic_xenophobe = { 
					create_ship_design = { design = "NAME_Reaper" }
					add_ship_design = last_created_design
					create_ship_design = { design = "NAME_Imperium" }
					add_ship_design = last_created_design
					create_ship_design = { design = "NAME_Supremacy" }
					add_ship_design = last_created_design
					create_ship_design = { design = "NAME_Glory" }
					add_ship_design = last_created_design
					create_ship_design = { design = "NAME_Devastator" }
					add_ship_design = last_created_design
					give_technology = { message = no tech = tech_pk_cracker }
					root.species = {
						switch = {
							trigger = has_trait
							"trait_pc_desert_preference" = { root = { every_owned_pop = { limit = { NOT = { is_same_species = root } } modify_species = { species = this base = none add_trait = trait_pc_desert_preference } } } }
							"trait_pc_arid_preference" = { root = { every_owned_pop = { limit = { NOT = { is_same_species = root } } modify_species = { species = this base = none add_trait = trait_pc_arid_preference } } } }
							"trait_pc_savannah_preference" = { root = { every_owned_pop = { limit = { NOT = { is_same_species = root } } modify_species = { species = this base = none add_trait = trait_pc_savannah_preference } } } }
							"trait_pc_tropical_preference" = { root = { every_owned_pop = { limit = { NOT = { is_same_species = root } } modify_species = { species = this base = none add_trait = trait_pc_tropical_preference } } } }
							"trait_pc_continental_preference" = { root = { every_owned_pop = { limit = { NOT = { is_same_species = root } } modify_species = { species = this base = none add_trait = trait_pc_continental_preference } } } }
							"trait_pc_ocean_preference" = { root = { every_owned_pop = { limit = { NOT = { is_same_species = root } } modify_species = { species = this base = none add_trait = trait_pc_ocean_preference } } } }
							"trait_pc_arctic_preference" = { root = { every_owned_pop = { limit = { NOT = { is_same_species = root } } modify_species = { species = this base = none add_trait = trait_pc_arctic_preference } } } }
							"trait_pc_tundra_preference" = { root = { every_owned_pop = { limit = { NOT = { is_same_species = root } } modify_species = { species = this base = none add_trait = trait_pc_tundra_preference } } } }
							"trait_pc_alpine_preference" = { root = { every_owned_pop = { limit = { NOT = { is_same_species = root } } modify_species = { species = this base = none add_trait = trait_pc_alpine_preference } } } }
							"trait_pc_nuked_preference" = { root = { every_owned_pop = { limit = { NOT = { is_same_species = root } } modify_species = { species = this base = none add_trait = trait_pc_nuked_preference } } } }
							"trait_pc_gaia_preference" = { root = { every_owned_pop = { limit = { NOT = { is_same_species = root } } modify_species = { species = this base = none add_trait = trait_pc_gaia_preference } } } }
						}
					}
					last_created_species = {
						set_citizenship_type = {
							type = citizenship_slavery
							cooldown = no
							country = ROOT
						}
						set_slavery_type = {
							type = slavery_domestic
							cooldown = no
							country = ROOT
						}
					}
				}
				ethic_fanatic_authoritarian = { 
					create_ship_design = { design = "NAME_Giant" }
					add_ship_design = last_created_design
					create_ship_design = { design = "NAME_Stellar" }
					add_ship_design = last_created_design
					create_ship_design = { design = "NAME_Planedo" }
					add_ship_design = last_created_design
					create_ship_design = { design = "NAME_Moon" }
					add_ship_design = last_created_design
					create_ship_design = { design = "NAME_Dwarf" }
					add_ship_design = last_created_design
					give_technology = { message = no tech = tech_pk_cracker }
				}
				ethic_fanatic_egalitarian = {
					if = {
						limit = { has_country_flag = fallen_empire_7 }
						create_ship_design = { design = "NAME_Justice" }
						add_ship_design = last_created_design
						create_ship_design = { design = "NAME_Liberation" }
						add_ship_design = last_created_design
						create_ship_design = { design = "NAME_Freeborn" }
						add_ship_design = last_created_design
						create_ship_design = { design = "NAME_Equalities" }
						add_ship_design = last_created_design
						create_ship_design = { design = "NAME_Shininess" }
						add_ship_design = last_created_design
						give_technology = { message = no tech = tech_pk_shielder }
					}
				}
			}
		}
		if = {
			limit = { is_materialist = yes }
			modify_species = {
				species = this
				add_trait = trait_cybernetic
			}
			add_modifier = { modifier = ap_the_flesh_is_weak days = -1 }
		}
		if = {
			limit = { is_spiritualist = yes }
			modify_species = {
				species = this
				add_trait = trait_psionic
			}
			country_event = { id = civic_events.6 days = 20 random = 20 }
		}
		if = {
			limit = { OR = { is_fallen_empire_xenophile = yes is_fallen_empire_xenophobe = yes } }
			add_modifier = { modifier = civic_evolutionary_mastery days = -1 }
			give_technology = { tech = tech_genetic_resequencing message = no }
		}
		if = {
			limit = {
				has_authority = auth_machine_intelligence
			}
			random_list = {
				66 = { set_country_flag = fallen_machine_empire_awaken_1 }	# Custodian
				33 = { set_country_flag = fallen_machine_empire_awaken_2 }	# Berserker
			}
		}
		if = {
			limit = {
				NOT = { has_authority = auth_machine_intelligence }
			}
			every_owned_pop = {
				limit = {
					is_organic_species = yes
				}
				set_pop_flag = organic_fallen_empire_pop
			}
		}
		# contact other fallen empires & marauders
		every_country = {
			limit = {
				OR = {
					is_country_type = faction
					is_country_type = adversary
					is_country_type = neutral_faction
					is_country_type = nomad
					is_country_type = pirate
					is_country_type = dormant_marauders
					is_country_type = ruined_marauders
					is_country_type = awakened_marauders
					is_country_type = fallen_empire
					is_country_type = awakened_fallen_empire
					is_country_type = rebel
					is_country_type = ambient
					is_country_type = enclave
					is_country_type = shroud_spirits
					is_country_type = tiyanki
					is_country_type = amoeba
					is_country_type = crystal
					is_country_type = drone
					is_country_type = cloud
					is_country_type = portal_holder
					is_country_type = feral_prethoryn
					is_country_type = feral_prethoryn_infighting
					is_country_type = marauder_raiders
					is_country_type = vol
					is_country_type = ratlings
					is_country_type = nivlacs
					is_country_type = enigmatic_cache
					is_country_type = gray_goo
					is_country_type = guardian
					is_country_type = guardian_dragon
					is_country_type = guardian_stellarite
					is_country_type = guardian_wraith
					is_country_type = guardian_hiver
					is_country_type = guardian_horror
					is_country_type = guardian_fortress
					is_country_type = guardian_dreadnought
					is_country_type = guardian_sphere
					is_country_type = guardian_scavenger_bot
					is_country_type = guardian_elderly_tiyanki
					is_country_type = ldragon_country
					is_country_type = guardian_hatchling
					is_country_type = prikki
					is_country_type = caravaneer_home
					is_country_type = caravaneer_fleet
				}
				NOT = { has_communications = root }
			}
			establish_communications_no_message = root
		}

		# setup mining & research stations
		every_planet_within_border = {
			limit = {
				has_deposit_for = shipclass_mining_station
				has_mining_station = no
				is_star = no
			}
			create_mining_station = {
				owner = ROOT
			}
		}
		every_planet_within_border = {
			limit = {
				has_deposit_for = shipclass_research_station
				has_research_station = no
				is_star = no
			}
			create_research_station = {
				owner = ROOT
			}
		}
		# setup policies
		if = {
			limit = { is_gestalt = no }
			every_owned_pop_species = {
				limit = {
					is_species_class = MACHINE
				}
				set_citizenship_type = {
					type = citizenship_robot_servitude
					country = ROOT
				}
				set_military_service_type = {
					type = military_service_limited
					country = ROOT
				}
			}
		}
	}
}

# on_initialize_advanced_colony: remove tile blockers on capital
planet_event = {
	id = game_start.20
	hide_window = yes
	is_triggered_only = yes

	pre_triggers = {
		is_capital = yes
	}

	trigger = {
		owner = {
			NOR = {
				has_origin = origin_shattered_ring
				has_origin = origin_ringworld_start_01
				has_origin = origin_ringworld_start_02
				has_origin = origin_ringworld_start_03
			}
		}
	}

	immediate = {
		clear_blockers = yes
	}
}

# on_initialize_advanced_colony: set up additional buildings (mines, farms, power plants)
planet_event = {
	id = game_start.22
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		if = {
			limit = {
				owner = { NOT = { has_civic = civic_synthetic_evolution } }
				is_capital = yes
				NOR = {
					owner = { has_origin = origin_shattered_ring }
					owner = { has_origin = origin_ringworld_start_01 }
					owner = { has_origin = origin_ringworld_start_02 }
					owner = { has_origin = origin_ringworld_start_03 }
				}
			}
			add_district_and_planet_size_if_needed_effect = { district = district_mining }
			add_district_and_planet_size_if_needed_effect = { district = district_generator }
			add_district_and_planet_size_if_needed_effect = { district = district_generator }

			if = {
				limit = { owner = { has_authority = auth_machine_intelligence } }
				add_district_and_planet_size_if_needed_effect = { district = district_nexus }
				add_district_and_planet_size_if_needed_effect = { district = district_nexus }
			}
			else_if = {
				limit = { owner = { has_authority = auth_hive_mind } }
				add_district_and_planet_size_if_needed_effect = { district = district_hive }
				add_district_and_planet_size_if_needed_effect = { district = district_hive }
			}
			else = {
				add_district_and_planet_size_if_needed_effect = { district = district_city }
				add_district_and_planet_size_if_needed_effect = { district = district_city }
			}

			if = {
				limit = {
					owner = { NOT = { has_authority = auth_machine_intelligence } }
				}
				add_district_and_planet_size_if_needed_effect = { district = district_farming }
				add_district_and_planet_size_if_needed_effect = { district = district_farming }
			}
			if = {
				limit = {
					owner = { has_authority = auth_machine_intelligence }
				}
				add_district_and_planet_size_if_needed_effect = { district = district_generator }
				add_district_and_planet_size_if_needed_effect = { district = district_generator }
			}


			if = {
				limit = { owner = { is_gestalt = no } }
				add_building = building_factory_1
				add_building = building_commercial_zone
			}
		}
		else_if = {
			limit = {
				is_capital = yes
				owner = {
					OR = {
						has_origin = origin_shattered_ring
						has_origin = origin_ringworld_start_01
						has_origin = origin_ringworld_start_02
						has_origin = origin_ringworld_start_03
					}
				}
			}
			add_building = building_foundry_1
			add_building = building_factory_1
			if = {
				limit = {
					owner = {
						is_megacorp = no
						is_spiritualist = no
						is_gestalt = no
					}
				}
				add_building = building_autochthon_monument
			}
			else_if = {
				limit = {
					owner = { is_spiritualist = yes }
				}
				add_building = building_temple
			}
			else_if = {
				limit = {
					owner = { is_megacorp = yes }
				}
				add_building = building_corporate_monument
			}
			else_if = {
				limit = {
					owner = { is_hive_empire = yes }
				}
				add_building = building_hive_node
			}
			else_if = {
				limit = {
					owner = {
						is_machine_empire = yes
						NOT = { has_valid_civic = civic_machine_servitor }
					}
				}
				add_building = building_simulation_1
			}
			if = {
				limit = {
					owner = { is_gestalt = no }
				}
				add_district = district_rw_commercial
			}
			else_if = {
				limit = {
					owner = { is_hive_empire = yes }
				}
				add_district = district_rw_hive
			}
			else = {
				add_district = district_rw_nexus
			}
		}
		else_if = {
			limit = {
				is_capital = yes
				is_planet_class = pc_machine
			}
			if = {
				limit = {
					owner = { has_civic = civic_synthetic_evolution }
				}
				if = {
					limit = {
						NOT = { has_building = building_robot_assembly_plant }
					}
					add_building = building_robot_assembly_plant
				}
				add_building = building_factory_1
				add_building = building_commercial_zone
				while = {
					count = 2
					add_district_and_planet_size_if_needed_effect = {
						district = district_generator_uncapped
					}
				}
				while = {
					count = 2
					add_district_and_planet_size_if_needed_effect = {
						district = district_mining_uncapped
					}
				}
				while = {
					count = 2
					add_district_and_planet_size_if_needed_effect = {
						district = district_city
					}
				}
			}
			if = {
				limit = { owner = { has_authority = auth_machine_intelligence } }
				add_building = building_simulation_1
				while = {
					count = 2
					add_district_and_planet_size_if_needed_effect = {
						district = district_generator_uncapped
					}
				}
				while = {
					count = 2
					add_district_and_planet_size_if_needed_effect = {
						district = district_mining_uncapped
					}
				}
			}
		}
		else_if = {
			limit = {
				owner = { NOT = { has_civic = civic_synthetic_evolution } }
			}
			add_district_and_planet_size_if_needed_effect = { district = district_generator }
			add_district_and_planet_size_if_needed_effect = { district = district_mining }

			if = {
				limit = { owner = { has_authority = auth_machine_intelligence } }
				add_district_and_planet_size_if_needed_effect = { district = district_nexus }
				add_district_and_planet_size_if_needed_effect = { district = district_generator }
				add_district_and_planet_size_if_needed_effect = { district = district_generator }
			}
			else_if = {
				limit = { owner = { has_authority = auth_hive_mind } }
				add_district_and_planet_size_if_needed_effect = { district = district_hive }
				add_district_and_planet_size_if_needed_effect = { district = district_farming }
			}
			else = {
				add_district_and_planet_size_if_needed_effect = { district = district_city }
				add_district_and_planet_size_if_needed_effect = { district = district_farming }
			}

			if = {
				limit = { owner = { has_origin = origin_mechanists } }
				add_building = building_robot_assembly_plant
			}
		}
		else = {
			if = {
				limit = { owner = { has_civic = civic_synthetic_evolution } }
				add_building = building_robot_assembly_plant
				add_district_and_planet_size_if_needed_effect = { district = district_generator }
				add_district_and_planet_size_if_needed_effect = { district = district_mining }
				add_district_and_planet_size_if_needed_effect = { district = district_city }
				random_list = {
					1 = { add_district_and_planet_size_if_needed_effect = { district = district_generator } }
					1 = { add_district_and_planet_size_if_needed_effect = { district = district_mining } }
				}
			}
		}
	}
}

# on_initialize_advanced_colony: add additional pops
planet_event = {
	id = game_start.23
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		if = {
			limit = { is_capital = yes }

			if = {
				limit = { owner = { has_authority = auth_machine_intelligence } }
				while = {
					count = 13
					create_pop = { species = owner_main_species }
				}
			}
			else_if = {
				limit = { owner = { has_authority = auth_hive_mind } }
				while = {
					count = 16
					create_pop = { species = owner_main_species }
				}
			}
			else_if = {
				limit = {
					owner = {
						OR = {
							has_origin = origin_mechanists
							has_civic = civic_synthetic_evolution
						}
					}
				}
				random_galaxy_species = {
					limit = {
						has_species_flag = mechanical_species@root.owner
					}
					save_event_target_as = mechanical_species
				}
				while = {
					count = 6
					create_pop = {
						species = event_target:mechanical_species
					}
				}
				while = {
					count = 12
					create_pop = { species = owner_main_species }
				}
			}
			else_if = {
				limit = {
					owner = {
						OR = {
							has_civic = civic_hivekeeper
							has_origin = origin_syncretic_evolution
						}
					}
				}
				random_galaxy_species = {
					limit = {
						has_species_flag = syncretic_species@root.owner
					}
					save_event_target_as = syncretic_species
				}
				while = {
					count = 8
					create_pop = { species = event_target:syncretic_species }
				}
				while = {
					count = 10
					create_pop = { species = owner_main_species }
				}
			}
			else = {
				while = {
					count = 18
					create_pop = { species = owner_main_species }
				}
			}
		}
		else = {
			if = {
				limit = { owner = { has_authority = auth_machine_intelligence } }
				while = {
					count = 15
					create_pop = { species = owner_main_species }
				}
			}
			else_if = {
				limit = { owner = { has_authority = auth_hive_mind } }
				while = {
					count = 18
					create_pop = { species = owner_main_species }
				}
			}
			else_if = {
				limit = {
					owner = {
						OR = {
							has_origin = origin_mechanists
							has_civic = civic_synthetic_evolution
						}
					}
				}
				random_galaxy_species = {
					limit = {
						has_species_flag = mechanical_species@root.owner
					}
					save_event_target_as = mechanical_species
				}
				while = {
					count = 4
					create_pop = {
						species = event_target:mechanical_species
					}
				}
				while = {
					count = 7
					create_pop = { species = owner_main_species }
				}
			}
			else_if = {
				limit = {
					owner = {
						OR = {
							has_civic = civic_hivekeeper
							has_origin = origin_syncretic_evolution
						}
					}
				}
				random_galaxy_species = {
					limit = {
						has_species_flag = syncretic_species@root.owner
					}
					save_event_target_as = syncretic_species
				}
				while = {
					count = 4
					create_pop = { species = event_target:syncretic_species }
				}
				while = {
					count = 6
					create_pop = { species = owner_main_species }
				}
			}
			else = {
				while = {
					count = 10
					create_pop = { species = owner_main_species }
				}
			}
		}
	}
}