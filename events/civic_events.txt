namespace = civic_events

country_event = {
	id = civic_events.0
	hide_window = yes
	is_triggered_only = yes
	
	immediate = {
		if = {
			limit = { has_civic = civic_synthetic_evolution }
			add_modifier = { modifier = civic_synthetic_evolution days = -1 }
			set_country_flag = get_machine
			give_technology = { tech = tech_administrative_ai message = no }
			give_technology = { tech = tech_cryostasis_1 message = no }
			give_technology = { tech = tech_cryostasis_2 message = no }
			give_technology = { tech = tech_self_aware_logic message = no }
			give_technology = { tech = tech_automated_exploration message = no }
			give_technology = { tech = tech_sapient_ai message = no }
			give_technology = { tech = tech_combat_computers_1 message = no }
			give_technology = { tech = tech_combat_computers_2 message = no }
			give_technology = { tech = tech_combat_computers_3 message = no }
			give_technology = { tech = tech_artificial_moral_codes message = no }
			give_technology = { tech = tech_synthetic_thought_patterns message = no }
			give_technology = { tech = tech_powered_exoskeletons message = no }
			give_technology = { tech = tech_robotic_workers message = no }
			give_technology = { tech = tech_droid_workers message = no }
			give_technology = { tech = tech_automaton_brain message = no }
			give_technology = { tech = tech_synthetic_workers message = no }
			give_technology = { tech = tech_synthetic_leaders message = no }
			add_resource = { energy = 200 }
            add_resource = { food = -200 }
            set_policy = {
                policy = robot_machine_pop
                option = servitude_robot_machine_pop
                cooldown = no
			}
			set_policy = {
                policy = artificial_intelligence_policy
                option = ai_full_rights
                cooldown = no
			}
			every_owned_leader = {
				add_ruler_trait = leader_trait_ruler_synthetic
				if = {
					limit = { leader_class = governor }
					add_trait = leader_trait_governor_synthetic
				}
				if = {
					limit = { leader_class = scientist }
					add_trait = leader_trait_scientist_synthetic
				}
				if = {
					limit = { leader_class = admiral }
					add_trait = leader_trait_admiral_synthetic
				}
				if = {
					limit = { leader_class = general }
					add_trait = leader_trait_general_synthetic
				}
			}
			# every_pool_leader = {
			# 	add_ruler_trait = leader_trait_ruler_synthetic
			# 	if = {
			# 		limit = { leader_class = governor }
			# 		add_trait = leader_trait_governor_synthetic
			# 	}
			# 	if = {
			# 		limit = { leader_class = scientist }
			# 		add_trait = leader_trait_scientist_synthetic
			# 	}
			# 	if = {
			# 		limit = { leader_class = admiral }
			# 		add_trait = leader_trait_admiral_synthetic
			# 	}
			# 	if = {
			# 		limit = { leader_class = general }
			# 		add_trait = leader_trait_general_synthetic
			# 	}
			# }
		}
		if = {
			limit = { has_civic = civic_evolutionary_mastery }
			give_technology = { tech = tech_hydroponics message = no }
			give_technology = { tech = tech_gene_crops message = no }
			give_technology = { tech = tech_nano_vitality_crops message = no }
			give_technology = { tech = tech_nutrient_replication message = no }
			give_technology = { tech = tech_frontier_health message = no }
			give_technology = { tech = tech_frontier_hospital message = no }
			give_technology = { tech = tech_genome_mapping message = no }
			give_technology = { tech = tech_epigenetic_triggers message = no }
			give_technology = { tech = tech_cloning message = no }
			give_technology = { tech = tech_gene_banks message = no }
			give_technology = { tech = tech_glandular_acclimation message = no }
			give_technology = { tech = tech_gene_expressions message = no }
			give_technology = { tech = tech_selected_lineages message = no }
			give_technology = { tech = tech_capacity_boosters message = no }
			give_technology = { tech = tech_subdermal_stimulation message = no }
			give_technology = { tech = tech_morphogenetic_field_mastery message = no }
			give_technology = { tech = tech_gene_tailoring message = no }
			give_technology = { tech = tech_gene_seed_purification message = no }
			give_technology = { tech = tech_genetic_resequencing message = no }
			add_modifier = { modifier = civic_evolutionary_mastery days = -1 }
			country_event = { id = civic_events.8 days = 3 }
		}
		if = {
			limit = { has_civic = civic_transcendence }
			set_country_flag = researched_tech_telepathy
			set_country_flag = civic_transcendence
			give_technology = { tech = tech_psionic_theory message = no }
			give_technology = { tech = tech_telepathy message = no }
			give_technology = { tech = tech_holographic_rituals message = no }
			give_technology = { tech = tech_consecration_fields message = no }
			give_technology = { tech = tech_transcendent_faith message = no }
			add_research_option = tech_psi_jump_drive_1
			add_research_option = tech_psionic_shield
			add_research_option = tech_psionic_barrier
			country_event = { id = civic_events.6 days = 20 random = 20 }
        }
		if = {
			limit = { has_civic = civic_gestalt_terminator }
			set_country_flag = found_presapients
			give_technology = { tech = tech_psionic_theory message = no }
		}
		if = {
			limit = { has_valid_civic = civic_hivekeeper }
			set_country_flag = get_hive_mind
			give_technology = { tech = tech_psionic_theory message = no }
			give_technology = { tech = tech_create_hive_mind message = no }
			set_policy = {
                policy = hive_mind_pop
                option = servitude_hive_mind_pop
                cooldown = no
			}
		}
	}
}

planet_event = {
	id = civic_events.1
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		has_building = building_clone_vats
		FromFrom = { is_organic_species = yes }
	}
	immediate = {
		create_pop = {
			species = FromFrom
		}
	}
}

country_event = {
	id = civic_events.2
	hide_window = yes
	is_triggered_only = yes
	
	trigger = {
		is_country_type = default
		always = no
	}
	immediate = {
		capital_scope = {
			solar_system = {
				random_system_planet = {
					limit = { is_ringworld = yes is_capital = no }
					save_event_target_as = has_ringworld
				}
			}
		}
		if = {
			limit = {
				OR = {
					capital_scope = {
						is_ringworld = yes
					}
					exists = event_target:has_ringworld
				}
				NOT = { has_civic = civic_ringworld_start }
			}
			every_owned_planet = {
				remove_all_buildings = yes
				remove_all_districts = yes
				every_owned_pop = {
					kill_pop = yes
				}
				destroy_colony = yes
			}
		}
		if = {
			limit = { has_any_megastructure_in_empire = yes }
			every_owned_planet = {
				remove_all_buildings = yes
				remove_all_districts = yes
				every_owned_pop = {
					kill_pop = yes
				}
				destroy_colony = yes
			}
		}
	}
}

country_event = {
	id = civic_events.6
	title = "utopia.3000.name"
	desc = utopia.3000.intro.desc
	diplomatic = yes
	force_open = yes
	
	picture_event_data = {
		portrait = shroud1
		room = shroud_room
	}
	
	is_triggered_only = yes

	immediate = {
		set_country_flag = shroud_diplomacy_engaged
		set_country_flag = shroud_intro
		set_country_flag = breached_shroud
		random_country = {
			limit = { is_country_type = shroud }
			establish_communications_no_message = root
		}
	}

	after = {
		remove_country_flag = shroud_diplomacy_engaged
		remove_country_flag = shroud_intro
	}

	option = {
		name = "utopia.3000.a"

		hidden_effect = {
			country_event = { id = civic_events.7 }
			random_list = {
				90 = {
					add_modifier = {
						modifier = "shroud_happiness"
						days = 1800
					}
				}
				10 = {}
			}
			random_list = {
				90 = {
					add_modifier = {
						modifier = "shroud_research_speed"
						days = 1800
					}
				}
				10 = {}
			}
			random_list = {
				90 = {
					add_modifier = {
						modifier = "shroud_influence_boost"
						days = 1800
					}
				}
				10 = {}
			}
			random_list = {
				90 = {
					add_modifier = {
						modifier = "shroud_unity_boost"
						days = 1800
					}
				}
				10 = {}
			}
			random_list = {
				90 = {
					add_modifier = {
						modifier = "shroud_ethic_boost"
						days = 1800
					}
				}
				10 = {}
			}
			add_modifier = {
				modifier = "shroud_cooldown"
				days = 1800
			}
		}
	}
	option = {
		name = "exit.shroud"
		custom_tooltip = "exit.shroud.tooltip"
		default_hide_option = yes
	}
}

country_event = {
	id = civic_events.7
	title = "boon.bestowed"
	desc = utopia.3000.10.desc
	diplomatic = yes
	force_open = yes
	
	picture_event_data = {
		portrait = shroud1
		room = shroud_room
	}
	is_triggered_only = yes
	after = {
		hidden_effect = {
			remove_country_flag = shroud_diplomacy_engaged
			remove_country_flag = shroud_intro
		}
	}
	option = {
		name = "exit.shroud"
		default_hide_option = yes
	}
}

country_event = {
	id = civic_events.8
	is_triggered_only = yes
	diplomatic = yes
	picture_event_data = {
		portrait = root
		room = root
	}
	title = civic_events.8.name
	desc = civic_events.8.desc
	immediate = {
		add_modifier = { modifier = civic_evolutionary_mastery_cost days = 31 }
	}
	option = {
		name = OK
		tooltip = {
			add_modifier = { modifier = civic_evolutionary_mastery_cost }
		}
	}
}

planet_event = {
	id = civic_events.9
	hide_window = yes
	is_triggered_only = yes
	
	trigger = {
		FROM = { has_valid_civic = civic_gestalt_terminator }
		FROMFROM = {
			OR = {
				has_trait = trait_machine_unit
				has_trait = trait_hive_mind
			}
			NOT = {
				is_same_species = owner_species
			}
		}
		is_controlled_by = FROM
	}
	
	immediate = {
		FROM = {
			add_monthly_resource_mult = {
				resource = unity
				value = 1.5
				min = 5
				max = 100
			}
		}
		if = {
			limit = { FROMFROM = { has_trait = trait_machine_unit } }
			FROM = {
				add_monthly_resource_mult = {
					resource = alloys
					value = 1
					min = 1
					max = 100
				}
			}
		}
		else_if = {
			limit = {
				FROMFROM = {
					has_trait = trait_hive_mind
					NOT = { has_trait = trait_lithoid }
				}
			}
			if = {
				limit = { FROM = { has_country_flag = synthetic_empire } }
				FROM = {
					add_monthly_resource_mult = {
						resource = energy
						value = 1
						min = 1
						max = 100
					}
				}
			}
			else_if = {
				limit = {
					FROM = {
						is_lithoid_empire = yes
						NOT = { has_country_flag = synthetic_empire }
					}
				}
				FROM = {
					add_monthly_resource_mult = {
						resource = energy
						value = 1
						min = 1
						max = 100
					}
				}
			}
			else = {
				FROM = {
					add_monthly_resource_mult = {
						resource = food
						value = 1
						min = 1
						max = 100
					}
				}
			}
		}
		else_if = {
			limit = {
				FROMFROM = {
					has_trait = trait_hive_mind
					has_trait = trait_lithoid
				}
			}
			FROM = {
				add_monthly_resource_mult = {
					resource = minerals
					value = 1
					min = 1
					max = 100
				}
			}
		}
	}
}