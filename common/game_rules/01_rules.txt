# Root = claimer
# This = system
can_add_claim = {
	hidden_trigger = {
		if = {
			limit = {
				root = { NOT = { is_country_type = default } }
			}
			always = yes
		}
	}
	custom_tooltip = {
		fail_text = fallen_empires_technology_button_disable
		root = { NOT = { is_country_type = fallen_empire } }
	}
	custom_tooltip = {
		fail_text = CANNOT_ADD_CLAIM_POLICY
		OR = {
			root = { has_policy_flag = unrestricted_wars }
			AND = {
				exists = owner
				owner = { is_gestalt = yes }
			}
			AND = {
				exists = owner
				owner = {
					any_war = {
						any_attacker = { is_same_value = prevprev }
						any_defender = { is_same_value = root }
					}
				}
			}
		}
	}
	custom_tooltip = {
		fail_text = CANNOT_ADD_CLAIM_NOT_VALID_EMPIRE
		NAND = {
			exists = owner
			owner = {
				NOR = {
					is_country_type = default
					is_country_type = fallen_empire
					is_country_type = awakened_fallen_empire
				}
			}
		}
	}
	custom_tooltip = {
		fail_text = CANNOT_ADD_CLAIM_DEVOURING_SWARM
		NAND = {
			root = { has_valid_civic = civic_hive_devouring_swarm }
			root = { is_lithoid_empire = no }
		}
	}
	custom_tooltip = {
		fail_text = CANNOT_ADD_CLAIM_DEVOURING_SWARM_LITHOID
		NAND = {
			root = { has_valid_civic = civic_hive_devouring_swarm }
			root = { is_lithoid_empire = yes }
		}
	}
	custom_tooltip = {
		fail_text = CANNOT_ADD_CLAIM_ASSIMILATOR
		NOT = { root = { has_valid_civic = civic_machine_assimilator } }
	}
	custom_tooltip = {
		fail_text = CANNOT_ADD_CLAIM_PURIFIERS
		NAND = {
			exists = owner
			root = { has_valid_civic = civic_fanatic_purifiers }
			NOT = {	owner = { is_same_species = root } }
		}
	}
	custom_tooltip = {
		fail_text = CANNOT_ADD_CLAIM_EXTERMINATOR
		NAND = {
			exists = owner
			root = { has_valid_civic = civic_machine_terminator }
			owner = {
				NOR = {
					is_same_species = root
					has_country_flag = synthetic_empire
					has_authority = auth_machine_intelligence
				}
			}
		}
	}
	custom_tooltip = {
		fail_text = CANNOT_ADD_CLAIM_THEY_THREAT
		NAND = {
			exists = owner
			root = { has_valid_civic = civic_gestalt_terminator }
			owner = { is_gestalt = yes }
		}
	}
	custom_tooltip = {
		fail_text = CANNOT_ADD_CLAIM_THEY_THREAT
		NAND = {
			exists = owner
			owner = {
				OR = {
					has_valid_civic = civic_hive_devouring_swarm
					has_valid_civic = civic_fanatic_purifiers
					has_valid_civic = civic_machine_terminator
					has_valid_civic = civic_machine_assimilator
				}
			}
			root = {
				NOR = {
					has_valid_civic = civic_hive_devouring_swarm
					has_valid_civic = civic_fanatic_purifiers
					has_valid_civic = civic_machine_terminator
					has_valid_civic = civic_machine_assimilator
				}
			}
		}
	}
}

#Root = planet
#This = species
species_can_live_on_planet = {
	NAND = {
		root = { is_planet_class = pc_machine }
		NOR = {
			has_trait = trait_machine_unit
			has_trait = trait_mechanical
			AND = {
				has_trait = trait_cybernetic
				exists = root.owner
				root.owner = {
					has_authority = auth_machine_intelligence
					has_civic = civic_machine_assimilator # Assimilator empire
				}
			}
		}
	}
	NAND = {
		root = { is_planet_class = pc_hive }
		NOT = { has_trait = trait_hive_mind }
	}
	root = { NOT = { is_planet_class = pc_infested } }
}

#Root = country
#This = pop
can_generate_leader_from_pop = {
	has_citizenship_rights = yes
	NOT = { has_trait = trait_syncretic_proles }
	NOT = { has_trait = trait_nerve_stapled }
	OR = {
		is_robot_pop = no
		AND = {
			has_trait = "trait_mechanical"
			OR = {
				root = { has_technology = tech_synthetic_leaders }
				root = { has_authority = auth_machine_intelligence }
				root = { is_mechanical_empire = yes }
			}
			root = { has_policy_flag = ai_full_rights }
		}
	}
}

#Root = country
#This = species
can_generate_leader_from_species = {
	is_sapient = yes
	OR = {
		NAND = {
			NOT = { root = { has_technology = "tech_synthetic_leaders" } }
			NOT = { root = { has_policy_flag = ai_full_rights } }
			has_trait = "trait_mechanical"
		}
		has_citizenship_type = { type = citizenship_full country = root }
		has_citizenship_type = { type = citizenship_full_machine country = root }
	}
}

# Root = fallen empire
# This = planet
will_anger_fallen_empire = {
	OR = {
		AND = {
			root = { has_ai_personality_behaviour = demands_clear_borders }
			is_neighbor_of = root
		}
		AND = {
			root = { has_ai_personality_behaviour = holy_planets }
			OR = {
				is_same_value = event_target:holy_planet_1
				is_same_value = event_target:holy_planet_2
				is_same_value = event_target:holy_planet_3
				is_same_value = event_target:holy_planet_4
			}
		}
		AND = {
			root = {
				is_country_type = fallen_empire
				has_ethic = ethic_fanatic_egalitarian
			}
			any_owned_pop = { is_species_class = ROBOT }
			owner = { has_technology = tech_synthetic_workers NOT = { has_policy_flag = ai_full_rights } }
		}
	}
}

# Check if full sensor range in entire galaxy
# root: country
has_full_sensor_range = {
	NOT = { has_country_flag = had_closed_spy_orb }
	OR = {
		has_megastructure = spy_orb_4
		has_megastructure = spy_orb_restored
	}
}

# Checks if a pop can be assembled
# This = Species
# Root = Planet
can_species_be_assembled = {
	is_sapient = yes
	OR = {
		AND = {
			root.owner = { NOT = { has_policy_flag = no_robot_machine_pop } }
			has_trait = trait_machine_unit
		}
		AND = {
			root.owner = { NOT = { has_policy_flag = robots_outlawed } }
			has_trait = trait_mechanical
		}
	}
}

# Root = Species
# From = Country
# This = Species
species_has_happiness = {
	NOR = {
		has_trait = trait_machine_unit
		has_trait = trait_hive_mind
		has_trait = trait_nerve_stapled
		AND = {
			has_trait = trait_mechanical
			OR = {
				NOT = { exists = from }
				from = {
					NOT = { has_technology = tech_synthetic_workers }
					NOT = { has_technology = tech_sapient_ai }
				}
				from = { has_authority = auth_machine_intelligence }
				from = {
					has_policy_flag = ai_outlawed
					OR = {
						has_technology = tech_synthetic_workers
						has_technology = tech_sapient_ai
					}
				}
			}
		}
		AND = {
			has_trait = trait_cybernetic
			exists = from
			from = {
				has_authority = auth_machine_intelligence
				has_civic = civic_machine_assimilator # Assimilator empire
			}
		}
	}
}

#This rule is a condition for bombarding planets
#Root = fleet, potential attacker
#From = planet, potential target
can_orbital_bombard = {
	exists = FROM.OWNER
	NOT = {
		any_owned_ship = {
			OR = {
				is_ship_size = colossus
				is_ship_size = fe_colossus
			}
		}
	}
	OR = {
		AND = {
			FROM = { is_planet_class = pc_shielded_gaia }
			ROOT.OWNER = {
				OR = {
					is_country_type = extradimensional
					is_country_type = extradimensional_2
					is_country_type = extradimensional_3
					is_country_type = swarm
					is_country_type = ai_empire
					is_country_type = cybrex_empire
					is_country_type = gray_goo
				}
			}
		}
		AND = {
			FROM = { NOT = { is_planet_class = pc_shielded_gaia } }
			OR = {
				AND = {
					ROOT.OWNER = {
						NOT = { has_communications = FROM.OWNER }
					}
					FROM.OWNER = {
						NOT = { is_country_type = primitive }
					}
				}
				AND = {
					ROOT.OWNER = {
						NOR = {
							has_policy_flag = interference_passive
							has_policy_flag = interference_active
						}
					}
					FROM.OWNER = { is_country_type = primitive }
				}
				ROOT.OWNER = { is_at_war_with = FROM.CONTROLLER }
				FROM = { is_planet_class = pc_infested }
				FROM.CONTROLLER = {
					OR = {
						is_country_type = swarm
						is_country_type = ai_empire
						is_country_type = cybrex_empire
					}
				}
				ROOT.OWNER = {
					OR = {
						is_country_type = extradimensional
						is_country_type = extradimensional_2
						is_country_type = extradimensional_3
						is_country_type = swarm
						is_country_type = ai_empire
						is_country_type = cybrex_empire
						is_country_type = dormant_marauders
						is_country_type = marauder_raiders
						is_country_type = ruined_marauders
						is_country_type = gray_goo
						is_country_type = vol
						AND = {
							is_country_type = awakened_marauders
							FROM.CONTROLLER = {
								NAND = {
									is_subject_type = satrapy
									NOT = { has_country_flag = rebelling_satrapy }
								}
							}
						}
					}
				}
				AND = {
					from.controller = {
						is_country_type = faction
						NOT = { is_same_value = root.owner }
					}
					from.owner = {
						is_same_value = root.owner
					}
				}
			}
		}
	}
}

#Root = country
#This = planet
can_colonize_planet = {
	custom_tooltip_fail = {
		text = fallen_empire_no_colonize
		NOT = { ROOT = { is_country_type = fallen_empire } }
	}
}

#Root = planet
#This = country
can_release_vassal = {
	custom_tooltip = {
		fail_text = default
		NOT = { has_valid_civic = civic_fanatic_purifiers }
	}
	custom_tooltip = {
		fail_text = default
		NOT = { has_valid_civic = civic_machine_terminator }
	}
	custom_tooltip = {
		fail_text = default
		NOT = { has_valid_civic = civic_machine_assimilator }
	}
	custom_tooltip = {
		fail_text = default
		NOT = { has_valid_civic = civic_hive_devouring_swarm }
	}
	Root = {
		exists = owner
		owner = {
			NOR = {
				is_country_type = fallen_empire
				is_country_type = awakened_fallen_empire
			}
		}
	}
}
# Can the pop be purged/disassembled individually by its owner
# scope: pop
can_purge_pop_manually = {
	custom_tooltip = {
		fail_text = "ALREADY_BEING_PURGED"
		NOT = { has_citizenship_type = { type = citizenship_purge } }
	}
	custom_tooltip = {
		fail_text = "ACTION_CANNOT_PURGE_CITIZEN"
		exists = owner
		OR = {
			is_robot_pop = yes
			is_sapient = no
			owner = { has_authority = auth_hive_mind }
			has_citizenship_type = { type = citizenship_slavery }
			has_citizenship_type = { type = citizenship_full_machine }
		}
	}
	custom_tooltip = {
		fail_text = "ACTION_CANNOT_PURGE_POLICY"
		exists = owner
		OR = {
			is_robot_pop = yes
			AND = {
				is_sapient = no
				owner = { NOT = { has_policy_flag = pre_sapients_protect } }
			}
			owner = { has_ethic = ethic_gestalt_consciousness }
			owner = { has_policy_flag = purge_allowed }
		}
	}
	custom_tooltip = {
		fail_text = "ACTION_DISASSEMBLE_SYNTHETICS"
		exists = owner
		OR = {
			owner = { has_country_flag = synthetic_empire }
			is_robot_pop = no
			owner = { has_authority = auth_hive_mind }
			NAND = {
				has_trait = trait_mechanical
				owner = { has_policy_flag = ai_full_rights }
			}
		}
	}
}

# This = pop
can_resettle_pop = {
	IF = { #Done as an IF/ELSE so the tooltip isn't hideous and unreadable
		limit = { is_shackled_robot = yes }
		is_shackled_robot = yes
	}
	ELSE_IF = {
		limit = {
			planet = {
				OR = {
					has_modifier = doomsday_1
					has_modifier = doomsday_2
					has_modifier = doomsday_3
					has_modifier = doomsday_4
					has_modifier = doomsday_5
				}
			}
		}
		planet = {
			OR = {
				has_modifier = doomsday_1
				has_modifier = doomsday_2
				has_modifier = doomsday_3
				has_modifier = doomsday_4
				has_modifier = doomsday_5
			}
		}
	}
	ELSE = {
		OR = {
			owner = {
				OR = {
					has_policy_flag = resettlement_allowed
					is_gestalt = yes
				}
			}
			AND = {
				#owner = { has_technology = tech_automaton_brain }
				has_trait = trait_machine_unit
			}
			AND = {
				#owner = { has_technology = tech_create_hive_mind }
				has_trait = trait_hive_mind
			}
			has_citizenship_type = { country = root type = citizenship_slavery }
			has_citizenship_type = { country = root type = citizenship_robot_servitude }
		}
	}
}

# This = Planet
can_resettle_planet = {
	is_controlled_by = owner
	has_ground_combat = no
	has_orbital_bombardment = no
	owner = {
		OR = {
			has_policy_flag = resettlement_allowed
			is_gestalt = yes
			any_owned_pop = {
				is_shackled_robot = yes
			}
			any_owned_planet = {
				OR = {
					has_modifier = doomsday_1
					has_modifier = doomsday_2
					has_modifier = doomsday_3
					has_modifier = doomsday_4
					has_modifier = doomsday_5
				}
			}
			AND = {
				has_technology = tech_create_hive_mind
				any_owned_pop = {
					has_trait = trait_hive_mind
				}
			}
			AND = {
				has_technology = tech_automaton_brain
				any_owned_pop = {
					has_trait = trait_machine_unit
				}
			}
		}
	}
	custom_tooltip = {
		text = "RESETTLE_PLANET_UNDER_COLONIZATION"
		exists = this
		is_under_colonization = no
	}
}

# This = planet
# Root = country
can_force_decline_on_planet = {
	OR = {
		owner = { NOT = { has_policy_flag = population_controls_not_allowed } }
		owner = { has_country_flag = synthetic_empire }
		any_owned_pop = {
			OR = {
				has_citizenship_type = { country = root type = citizenship_robot_servitude }
				is_enslaved = yes
			}
		}
	}
	custom_tooltip = {
		fail_text = FORCED_DECLINE_ALREADY_PURGING
		NOT = {
			any_owned_pop = {
				has_citizenship_type = { type = citizenship_purge }
				NOT = { has_purge_type = { country = from type = purge_neutering } }
			}
		}
	}
}

# This = species
# Root = country
can_force_decline_species = {
	OR = {
		AND = {
			root = { has_country_flag = synthetic_empire }
			is_robotic_species = yes
		}
		has_citizenship_type = { country = root type = citizenship_slavery }
		has_citizenship_type = { country = root type = citizenship_robot_servitude }
	}
}

# this = ship
# root = country that kills ship
can_spawn_debris = {
	root = { 
		OR = {
			is_country_type = default
			is_country_type = fallen_empire
			is_country_type = awakened_fallen_empire
		}
	}
	exists = owner
	owner = {
		NOR = {
			has_ascension_perk = ap_enigmatic_engineering
			has_ethic = ethic_fanatic_communism
			has_country_flag = fallen_empire_6_human_2
		}
		relative_power = { who = root category = technology value <= superior }
	}
}

# this = system
# root = country
system_blocks_sensors = {
	OR = {
		is_inside_nebula = yes
		has_star_flag = lcluster
		has_star_flag = sealed_system
		has_star_flag = fallen_sol_system
		AND = {
			exists = owner
			owner = {
				NOT = { has_established_contact = root }
				is_fallen_empire = yes
			}
		}
	}
}

# Root = country attempting to target system for movement
# This = system being targeted
can_enter_system_by_jump = {
	custom_tooltip = {
		success_text = "debug: can jump"
		fail_text = cannot_jump_to_system

		# Sealed system
		OR = {
			NOR = {
				has_star_flag = sealed_system
				has_star_flag = fallen_sol_system
			}
			OR = {
				AND = {
					root = { has_country_flag = entered_fallen_sol_system }
					has_star_flag = fallen_sol_system
				}
				AND = {
					root = { has_country_flag = entered_sealed_system }
					has_star_flag = sealed_system
				}
			}
		}
		# L-Cluster
		NOT = { has_star_flag = lcluster }
	}
}

# This = pop
pop_generates_crime = {
	OR = {
		AND = {
			is_sapient = yes
			is_non_sapient_robot = no
			is_being_assimilated = no
		}
		AND = {
			exists = owner
			has_trait = trait_machine_unit
			owner = {
				NOR = {
					has_country_flag = machine_computer_repressed_completed
					has_country_flag = machine_computer_release_completed
				}
			}
		}
		#AND = {
		#	exists = owner
		#	has_trait = trait_hive_mind
		#	owner = {
		#		NOR = {
		#			has_country_flag = hive_mind_repressed_completed
		#			has_country_flag = hive_mind_release_completed
		#		}
		#	}
		#}
	}
}

# This = planet
# Root = country
can_force_grow_on_planet = {
	exists = owner
	OR = {
		owner = { NOT = { has_policy_flag = population_controls_not_allowed } }
		any_owned_pop = {
			has_citizenship_type = { type = citizenship_slavery }
			has_trait = trait_hive_mind
		}
	}
}