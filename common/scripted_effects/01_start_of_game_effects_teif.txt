# This is called after game start
generate_start_deposits_and_blockers = {
	clear_deposits = yes

	# blockers
	if = {
		limit = {
			owner = {
				has_origin = origin_post_apocalyptic
			}
		}
		add_deposit = d_tomb_world_ruins
		add_deposit = d_tomb_world_wasteland
	}
	else_if = {
		limit = {
			owner = {
				has_civic = civic_machine_terminator
				NOT = { has_origin = origin_machine }
			}
		}

		add_deposit = d_exterminators_ruins
		add_deposit = d_former_battlefield
	}
	else_if = {
		limit = {
			owner = {
				NOR = {
					has_civic = civic_machine_terminator
					has_origin = origin_post_apocalyptic
				}
			}
			is_planet_class = pc_nuked
		}
		if = {
			limit = { owner = { is_machine_empire = no } }
			add_deposit = d_tomb_world_ruins
			add_deposit = d_tomb_world_wasteland
		}
		if = {
			limit = { owner = { is_machine_empire = yes } }
			add_deposit = d_exterminators_ruins
			add_deposit = d_former_battlefield
		}
	}
	else_if = {
		limit = {
			owner = {		
				has_civic = civic_machine_servitor
			}
		}

		add_deposit = d_strip_mine
		add_deposit = d_unsupervised_settlement
	}
	else_if = {
		limit = {
			owner = {
				has_civic = civic_machine_assimilator
				NOT = { has_origin = origin_machine }
			}
		}

		add_deposit = d_strip_mine
		add_deposit = d_assimilators_ruins
	}
	else_if = {
		limit = {
			owner = {
				has_authority = auth_machine_intelligence
				NOT = { has_origin = origin_machine }
			}
		}

		add_deposit = d_strip_mine
		add_deposit = d_machine_empire_ruins
	}
	else_if = {
		limit = {
			owner = {
				has_authority = auth_hive_mind
			}
		}

		add_deposit = d_collapsed_burrows
		add_deposit = d_failing_infrastructure
		add_deposit = d_failing_infrastructure
	}
	else_if = {
		limit = {
			owner = {
				NOT = { has_origin = origin_machine }
			}
		}
		add_deposit = d_decrepit_dwellings
		add_deposit = d_failing_infrastructure
		add_deposit = d_failing_infrastructure
	}

	if = {
		limit = {
			owner = {
				is_lithoid_empire = yes
				NOR = {
					has_valid_civic = civic_hive_devouring_swarm
					has_origin = origin_lithoid
				}
			}
		}
		while = {
			count = 4
			add_deposit = d_hibernating_lithoids
		}
	}

	if = {
		limit = {
			owner = {
				is_lithoid_empire = yes
				has_valid_civic = civic_hive_devouring_swarm
			}
		}
		while = {
			count = 2
			add_deposit = d_hibernating_lithoids
		}
	}

	if = {
		limit = {
			OR = {
				is_planet_class = pc_nuked
				owner = {		
					has_origin = origin_post_apocalyptic
				}
			}
			owner = {		
				is_machine_empire = no
			}
		}

		# 3 + 3 energy
		add_deposit = d_hot_springs
		add_deposit = d_searing_desert
		add_deposit = d_underwater_vent

		# 3 + 4 mining
		add_deposit = d_veiny_cliffs
		add_deposit = d_ore_rich_caverns
		add_deposit = d_submerged_ore_veins

		# 3 + 2 farming
		add_deposit = d_lichen_fields
		add_deposit = d_fungal_caves
		add_deposit = d_fungal_forest
	}

	if = {
		limit = {
			OR = {
				owner = {	
					has_civic = civic_machine_terminator
					NOT = { has_origin = origin_machine }
				}
				is_planet_class = pc_nuked
			}
			owner = { is_machine_empire = yes }
		}

		# 4 + 3 energy
		add_deposit = d_hot_springs
		add_deposit = d_searing_desert
		add_deposit = d_underwater_vent
		add_deposit = d_searing_desert

		# 4 + 3 mining
		add_deposit = d_veiny_cliffs
		add_deposit = d_ore_rich_caverns
		add_deposit = d_submerged_ore_veins

		# 3 farming
		add_deposit = d_lichen_fields
		add_deposit = d_fungal_caves
	}

	if = {
		limit = {
			is_planet_class = pc_gaia
		}
		if = {
			limit = {
				owner = {
					has_origin = origin_life_seeded
				}
			}
			set_planet_size = 25
		}

		# 5 + 3 energy
		add_deposit = d_searing_desert
		add_deposit = d_underwater_vent
		add_deposit = d_tempestous_mountain

		# 5 + 3 mining
		add_deposit = d_ore_rich_caverns
		add_deposit = d_prosperous_mesa
		add_deposit = d_submerged_ore_veins

		# 5 + 3 farming (lithoids swap 3 for minerals)
		add_deposit = d_lush_jungle
		add_deposit = d_teeming_reef

		if = {
			limit = { owner = { is_lithoid_empire = yes } }
			add_deposit = d_rich_mountain
		}
		else = {
			add_deposit = d_black_soil
		}

		# 1 random medium deposit
		random_list = {
			33 = { add_deposit = d_frozen_gas_lake }
			33 = { add_deposit = d_prosperous_mesa }
			33 = { add_deposit = d_fertile_lands }
		}

		add_deposit = d_dust_caverns
		add_deposit = d_bubbling_swamp
		add_deposit = d_crystalline_caverns
	}

	if = {
		limit = {
			is_planet_class = pc_continental
		}

		# 3 + 3 energy
		add_deposit = d_hot_springs
		add_deposit = d_rushing_waterfalls
		add_deposit = d_tempestous_mountain
		if = {
			limit = { owner = { is_machine_empire = yes } }
			add_deposit = d_rushing_waterfalls
		}
		if = {
			limit = { owner = { has_valid_civic = civic_machine_servitor } }
			add_deposit = d_hot_springs
		}

		# 3 + 3 mining
		add_deposit = d_veiny_cliffs
		add_deposit = d_prosperous_mesa
		add_deposit = d_rich_mountain

		# 4 + 3 farming (lithoids swap 3 for minerals)
		add_deposit = d_rugged_woods
		add_deposit = d_fertile_lands
		if = {
			limit = { owner = { is_machine_empire = no } }
			add_deposit = d_rugged_woods

			if = {
				limit = { owner = { is_lithoid_empire = yes } }
				add_deposit = d_rich_mountain
			}
			else = {
				add_deposit = d_black_soil
			}
		}
	}

	if = {
		limit = {
			is_planet_class = pc_tropical
		}

		# 3 + 3 energy
		add_deposit = d_hot_springs
		add_deposit = d_rushing_waterfalls
		add_deposit = d_tempestous_mountain
		if = {
			limit = { owner = { is_machine_empire = yes } }
			add_deposit = d_rushing_waterfalls
		}
		if = {
			limit = { owner = { has_valid_civic = civic_machine_servitor } }
			add_deposit = d_hot_springs
		}

		# 3 + 3 mining
		add_deposit = d_mineral_fields
		add_deposit = d_prosperous_mesa
		add_deposit = d_submerged_ore_veins

		# 4 + 3 farming (lithoids swap 3 for minerals)
		add_deposit = d_green_hills
		add_deposit = d_lush_jungle
		if = {
			limit = { owner = { is_machine_empire = no } }
			if = {
				limit = { owner = { is_lithoid_empire = yes } }
				add_deposit = d_submerged_ore_veins
			}
			else = {
				add_deposit = d_green_hills
				add_deposit = d_tropical_island
			}
		}
	}

	if = {
		limit = {
			is_planet_class = pc_ocean
		}

		# 3 + 3 energy
		add_deposit = d_hot_springs
		add_deposit = d_rushing_waterfalls
		add_deposit = d_underwater_vent
		if = {
			limit = { owner = { is_machine_empire = yes } }
			add_deposit = d_rushing_waterfalls
		}
		if = {
			limit = { owner = { has_valid_civic = civic_machine_servitor } }
			add_deposit = d_hot_springs
		}

		# 3 + 3 mining
		add_deposit = d_mineral_fields
		add_deposit = d_ore_rich_caverns
		add_deposit = d_submerged_ore_veins

		# 4 + 3 farming (lithoids swap 3 for minerals)
		add_deposit = d_green_hills
		add_deposit = d_lush_jungle
		if = {
			limit = { owner = { is_machine_empire = no } }
			add_deposit = d_green_hills

			if = {
				limit = { owner = { is_lithoid_empire = yes } }
				add_deposit = d_submerged_ore_veins
			}
			else = {
				add_deposit = d_teeming_reef
			}
		}
	}

	if = {
		limit = {
			is_planet_class = pc_arctic
		}

		# 3 + 3 energy
		add_deposit = d_hot_springs
		add_deposit = d_frozen_gas_lake
		add_deposit = d_geothermal_vent
		if = {
			limit = { owner = { is_machine_empire = yes } }
			add_deposit = d_frozen_gas_lake
		}
		if = {
			limit = { owner = { has_valid_civic = civic_machine_servitor } }
			add_deposit = d_hot_springs
		}

		# 3 + 3 mining
		add_deposit = d_veiny_cliffs
		add_deposit = d_ore_rich_caverns
		add_deposit = d_rich_mountain

		# 4 + 3 farming (lithoids swap 3 for minerals)
		add_deposit = d_lichen_fields
		add_deposit = d_fungal_caves
		if = {
			limit = { owner = { is_machine_empire = no } }
			add_deposit = d_lichen_fields

			if = {
				limit = { owner = { is_lithoid_empire = yes } }
				add_deposit = d_rich_mountain
			}
			else = {
				add_deposit = d_fungal_forest
			}
		}
	}

	if = {
		limit = {
			is_planet_class = pc_tundra
		}

		# 3 + 3 energy
		add_deposit = d_hot_springs
		add_deposit = d_frozen_gas_lake
		add_deposit = d_geothermal_vent
		if = {
			limit = { owner = { is_machine_empire = yes } }
			add_deposit = d_frozen_gas_lake
		}
		if = {
			limit = { owner = { has_valid_civic = civic_machine_servitor } }
			add_deposit = d_hot_springs
		}

		# 3 + 3 mining
		add_deposit = d_mineral_fields
		add_deposit = d_ore_rich_caverns
		add_deposit = d_rich_mountain

		# 4 + 3 farming (lithoids swap 3 for minerals)
		add_deposit = d_forgiving_tundra
		add_deposit = d_fungal_caves
		if = {
			limit = { owner = { is_machine_empire = no } }
			add_deposit = d_forgiving_tundra

			if = {
				limit = { owner = { is_lithoid_empire = yes } }
				add_deposit = d_rich_mountain
			}
			else = {
				add_deposit = d_fungal_forest
			}
		}
	}

	if = {
		limit = {
			is_planet_class = pc_alpine
		}

		# 3 + 3 energy
		add_deposit = d_hot_springs
		add_deposit = d_frozen_gas_lake
		add_deposit = d_tempestous_mountain
		if = {
			limit = { owner = { is_machine_empire = yes } }
			add_deposit = d_frozen_gas_lake
		}
		if = {
			limit = { owner = { has_valid_civic = civic_machine_servitor } }
			add_deposit = d_hot_springs
		}

		# 3 + 3 mining
		add_deposit = d_veiny_cliffs
		add_deposit = d_ore_rich_caverns
		add_deposit = d_rich_mountain

		# 4 + 3 farming (lithoids swap 3 for minerals)
		add_deposit = d_forgiving_tundra
		add_deposit = d_fungal_caves
		if = {
			limit = { owner = { is_machine_empire = no } }
			add_deposit = d_forgiving_tundra

			if = {
				limit = { owner = { is_lithoid_empire = yes } }
				add_deposit = d_rich_mountain
			}
			else = {
				add_deposit = d_fungal_forest
			}
		}
	}

	if = {
		limit = {
			is_planet_class = pc_desert
		}

		# 3 + 3 energy
		add_deposit = d_arid_highlands
		add_deposit = d_searing_desert
		add_deposit = d_geothermal_vent
		if = {
			limit = { owner = { is_machine_empire = yes } }
			add_deposit = d_searing_desert
		}
		if = {
			limit = { owner = { has_valid_civic = civic_machine_servitor } }
			add_deposit = d_arid_highlands
		}

		# 3 + 3 mining
		add_deposit = d_mineral_fields
		add_deposit = d_ore_rich_caverns
		add_deposit = d_rich_mountain

		# 4 + 3 farming (lithoids swap 3 for minerals)
		add_deposit = d_nutritious_mudland
		add_deposit = d_great_river
		if = {
			limit = { owner = { is_machine_empire = no } }
			add_deposit = d_nutritious_mudland

			if = {
				limit = { owner = { is_lithoid_empire = yes } }
				add_deposit = d_rich_mountain
			}
			else = {
				add_deposit = d_marvelous_oasis
			}
		}
	}

	if = {
		limit = {
			is_planet_class = pc_arid
		}

		# 3 + 3 energy
		add_deposit = d_arid_highlands
		add_deposit = d_searing_desert
		add_deposit = d_geothermal_vent
		if = {
			limit = { owner = { is_machine_empire = yes } }
			add_deposit = d_searing_desert
		}
		if = {
			limit = { owner = { has_valid_civic = civic_machine_servitor } }
			add_deposit = d_arid_highlands
		}

		# 3 + 3 mining
		add_deposit = d_veiny_cliffs
		add_deposit = d_ore_rich_caverns
		add_deposit = d_rich_mountain

		# 4 + 3 farming (lithoids swap 3 for minerals)
		add_deposit = d_bountiful_plains
		add_deposit = d_great_river
		if = {
			limit = { owner = { is_machine_empire = no } }
			add_deposit = d_bountiful_plains

			if = {
				limit = { owner = { is_lithoid_empire = yes } }
				add_deposit = d_rich_mountain
			}
			else = {
				add_deposit = d_tropical_island
			}
		}
	}

	if = {
		limit = {
			is_planet_class = pc_savannah
		}

		# 3 + 3 energy
		add_deposit = d_arid_highlands
		add_deposit = d_searing_desert
		add_deposit = d_geothermal_vent
		if = {
			limit = { owner = { is_machine_empire = yes } }
			add_deposit = d_searing_desert
		}
		if = {
			limit = { owner = { has_valid_civic = civic_machine_servitor } }
			add_deposit = d_arid_highlands
		}

		# 3 + 3 mining
		add_deposit = d_mineral_fields
		add_deposit = d_prosperous_mesa
		add_deposit = d_submerged_ore_veins

		# 4 + 3 farming (lithoids swap 3 for minerals)
		add_deposit = d_bountiful_plains
		add_deposit = d_fertile_lands
		if = {
			limit = { owner = { is_machine_empire = no } }
			add_deposit = d_bountiful_plains

			if = {
				limit = { owner = { is_lithoid_empire = yes } }
				add_deposit = d_rich_mountain
			}
			else = {
				add_deposit = d_black_soil
			}
		}
	}

	if = {
		limit = {
			is_planet_class = pc_relic
			owner = {
				has_origin = origin_remnants
			}
		}

		set_planet_size = 22

		# 5 blockers
		add_deposit = d_ruined_arcology
		add_deposit = d_ruined_arcology
		add_deposit = d_ruined_arcology
		add_deposit = d_ruined_arcology
		add_deposit = d_ruined_arcology

		# 3 + 3 energy
		add_deposit = d_arid_highlands
		add_deposit = d_searing_desert
		add_deposit = d_geothermal_vent
		if = {
			limit = { owner = { is_machine_empire = yes } }
			add_deposit = d_searing_desert
		}
		if = {
			limit = { owner = { has_valid_civic = civic_machine_servitor } }
			add_deposit = d_arid_highlands
		}

		# 3 + 3 mining
		add_deposit = d_mineral_fields
		add_deposit = d_prosperous_mesa
		add_deposit = d_submerged_ore_veins

		# 4 + 3 farming
		add_deposit = d_bountiful_plains
		add_deposit = d_fertile_lands
		if = {
			limit = { owner = { is_machine_empire = no } }
			add_deposit = d_bountiful_plains
			add_deposit = d_black_soil
		}
	}
	if = {
		limit = {
			owner = {
				has_origin = origin_machine_worlds
			}
		}
		set_planet_size = 25
	}
}

generate_start_buildings_and_districts = {
	if = {
		limit = {
			owner = {
				NOR = {
					has_origin = origin_shattered_ring
					has_origin = origin_ringworld_start_01
					has_origin = origin_ringworld_start_02
					has_origin = origin_ringworld_start_03
				}
			}
		}
		if = {
			limit = {
				owner = {
					OR = {
						has_valid_civic = civic_machine_assimilator
						has_valid_civic = civic_machine_servitor
						has_origin = origin_syncretic_evolution
					}
				}
			}

			if = {
				limit = { owner = { last_created_species = { is_lithoid = yes } } }
				owner = {
					set_country_flag = lithoid_subspecies
				}
			}
			else = {
				owner = {
					set_country_flag = non_lithoid_subspecies
				}
			}
		}

		if = {
				limit = {
					owner = {
						has_origin = origin_tree_of_life
						is_lithoid_empire = yes
					}
				}
				owner = {
					set_country_flag = non_lithoid_subspecies
				}
			}

		if = {
			limit = {
				owner = {
					is_regular_empire = yes
					NOT = { has_origin = origin_machine_worlds }
				}
			}

			# total - 24 jobs

			# 3 jobs
			add_district_and_planet_size_if_needed_effect = {
				district = district_city
			}

			if = {
				limit = {
					owner = { NOT = { has_valid_civic = civic_agrarian_idyll } }
				}
				while = {
					count = 2
					add_district_and_planet_size_if_needed_effect = {
						district = district_city
					}
				}
			}
			else = {
				add_district_and_planet_size_if_needed_effect = {
					district = district_farming
				}
			}

			# 4 - 6 jobs
			if = {
				limit = {
					owner = {
						OR = {
							is_lithoid_empire = no
							has_country_flag = non_lithoid_subspecies
						}
					}
				}
				while = {
					count = 2
					add_district_and_planet_size_if_needed_effect = {
						district = district_farming
					}
				}
				if = {
					limit = {
						owner = { has_origin = origin_default }
						owner = { NOT = { has_civic = civic_synthetic_evolution } }
					}
					add_district_and_planet_size_if_needed_effect = {
						district = district_farming
					}
				}
				if = {
					limit = {
						owner = { has_origin = origin_default }
						owner = { has_civic = civic_synthetic_evolution }
					}
					add_district_and_planet_size_if_needed_effect = {
						district = district_generator
					}
				}
			}
			else = {
				while = {
					count = 2
					add_district_and_planet_size_if_needed_effect = {
						district = district_mining
					}
				}
				if = {
					limit = {
						owner = { has_origin = origin_default }
					}
					add_district_and_planet_size_if_needed_effect = {
						district = district_mining
					}
				}
			}

			# 4 jobs
			while = {
				count = 2
				add_district_and_planet_size_if_needed_effect = {
					district = district_mining
				}
			}

			# 2 jobs
			add_district_and_planet_size_if_needed_effect = {
				district = district_generator
			}

			# 2 jobs
			if = {
				limit = { owner = { is_megacorp = no } }
				while = {
					count = 2
					add_district_and_planet_size_if_needed_effect = {
						district = district_generator
					}
				}
			}

			# 2 jobs
			if = {
				limit = {
					owner = { has_origin = origin_default }
				}
				add_district_and_planet_size_if_needed_effect = {
					district = district_generator
				}
			}

			# 3 jobs
			add_building = building_capital

			# 2 jobs
			add_building = building_bureaucratic_1

			# 2 jobs
			add_building = building_research_lab_1

			# 2 jobs
			add_building = building_foundry_1

			# 2 jobs
			add_building = building_factory_1

			# 4 jobs
			if = {
				limit = { owner = { is_megacorp = yes } }
				add_district_and_planet_size_if_needed_effect = {
					district = district_city
				}
				add_building = building_commercial_zone
			}
			add_building = building_luxury_residence
			if = {
				limit = { owner = { has_valid_civic = civic_hivekeeper } }
				while = {
					limit = { num_districts = { type = district_farming value > 0 } }
					remove_district = district_farming
				}
			}
		}
		if = {
			limit = {
				owner = {
					is_regular_empire = yes
					has_origin = origin_machine_worlds
				}
			}
			# 3 jobs
			add_building = building_capital
			# 2 jobs
			add_building = building_bureaucratic_1
			# 2 jobs
			add_building = building_research_lab_1
			# 2 jobs
			add_building = building_foundry_1
			# 2 jobs
			add_building = building_factory_1
			add_building = building_luxury_residence
			# 2 jobs
			while = {
				count = 2
				add_district_and_planet_size_if_needed_effect = {
					district = district_city
				}
			}
			# 4 jobs
			while = {
				count = 2
				add_district_and_planet_size_if_needed_effect = {
					district = district_mining_uncapped
				}
			}
			# 6 jobs
			while = {
				count = 3
				add_district_and_planet_size_if_needed_effect = {
					district = district_generator_uncapped
				}
			}
		}

		if = {
			limit = { owner = { is_hive_empire = yes } }

			# total - 34 jobs

			# 4 jobs
			while = {
				count = 2
				add_district_and_planet_size_if_needed_effect = {
					district = district_hive
				}
			}

			# 6-9 jobs
			if = {
				limit = { owner = { is_lithoid_empire = no } }
				while = {
					count = 2
					add_district_and_planet_size_if_needed_effect = {
						district = district_farming
					}
				}
				if = {
					limit = {
						owner = { has_origin = origin_default }
					}
					add_district_and_planet_size_if_needed_effect = {
						district = district_farming
					}
				}
			}
			else = {
				add_district = district_mining
				add_district = district_mining
				if = {
					limit = {
						owner = { has_origin = origin_default }
					}
					add_district_and_planet_size_if_needed_effect = {
						district = district_mining
					}
				}
			}

			# 6 jobs
			while = {
				count = 2
				add_district_and_planet_size_if_needed_effect = {
					district = district_mining
				}
			}

			if = {
				limit = {
					owner = { has_origin = origin_tree_of_life }
				}
				remove_district = district_mining
				add_district = {
					ignore_cap = yes
					district_type = district_farming
				}
			}

			# 6 jobs
			while = {
				count = 2
				add_district_and_planet_size_if_needed_effect = {
					district = district_generator
				}
			}

			# 3 jobs
			if = {
				limit = {
					owner = { has_origin = origin_default }
				}
				add_district_and_planet_size_if_needed_effect = {
					district = district_generator
				}
			}

			# 5 jobs
			add_building = building_hive_capital

			# 2 jobs
			add_building = building_hive_node

			# 2 jobs
			add_building = building_research_lab_1

			# 2 jobs
			add_building = building_foundry_1

			# 1 job
			add_building = building_spawning_pool

			# 1 job
			add_building = building_hive_warren

			# 1 jobs
			if = {
				limit = {
					owner = { has_origin = origin_default }
				}
				add_building = building_hive_warren
			}
		}

		# Replace capital building for machine empires
		if = {
			limit = { owner = { is_machine_empire = yes } }

			# total - 27 jobs

			# 3 jobs
			add_district_and_planet_size_if_needed_effect = {
				district = district_nexus
			}

			# 4 jobs
			while = {
				count = 2
				add_district_and_planet_size_if_needed_effect = {
					district = district_mining
				}
			}

			# 2 jobs
			if = {
				limit = {
					owner = { has_origin = origin_default }
				}
				add_district_and_planet_size_if_needed_effect = {
					district = district_mining
				}
			}

			# 10 jobs
			while = {
				count = 5
				add_district_and_planet_size_if_needed_effect = {
					district = district_generator
				}
			}

			# 2 jobs
			if = {
				limit = {
					owner = { has_origin = origin_default }
				}
				add_district_and_planet_size_if_needed_effect = {
					district = district_generator
				}
			}

			# 6 jobs
			add_building = building_machine_capital

			# 1 job
			add_building = building_machine_assembly_plant

			# 2 job
			add_building = building_uplink_node

			# 2 jobs
			add_building = building_research_lab_1

			# 2 jobs
			add_building = building_foundry_1
			add_building = building_drone_storage

			#Assimilators
			if = {
				limit = { owner = { has_civic = civic_machine_assimilator } }
				remove_district = district_generator

				if = {
					limit = { owner = { has_country_flag = lithoid_subspecies } }
					add_district_and_planet_size_if_needed_effect = {
						district = district_mining
					}
				}
				else = {
					add_district_and_planet_size_if_needed_effect = {
						district = district_farming
					}
				}
			}

			#Servitors
			if = {
				limit = { owner = { has_civic = civic_machine_servitor } }

				if = {
					limit = { owner = { has_country_flag = lithoid_subspecies } }
					add_district_and_planet_size_if_needed_effect = {
						district = district_mining
					}
				}
				else = {
					add_district_and_planet_size_if_needed_effect = {
						district = district_farming
					}
				}

				add_district_and_planet_size_if_needed_effect = {
					district = district_generator
				}
				#remove_district = district_nexus
				#remove_district = district_nexus #blocked removals for + 2 jobs and housing
				add_building = building_organic_sanctuary
			}
			if = {
				limit = { owner = { has_origin = origin_machine } }

				remove_district = district_generator
				remove_district = district_generator
				remove_district = district_generator
				remove_district = district_generator
				remove_district = district_generator

				remove_district = district_farming

				remove_district = district_mining
				remove_district = district_mining
				remove_district = district_mining
				remove_district = district_mining

				add_district = district_generator_uncapped
				add_district = district_generator_uncapped
				add_district = district_generator_uncapped
				add_district = district_generator_uncapped
				add_district = district_generator_uncapped

				add_district = district_mining_uncapped
				add_district = district_mining_uncapped

				#Assimilators
				if = {
					limit = { owner = { has_civic = civic_machine_assimilator } }
					add_deposit = d_organic_slurry
				}
			}
		}
	}
	if = {
		limit = {
			owner = {
				OR = {
					has_origin = origin_shattered_ring
					has_origin = origin_ringworld_start_01
					has_origin = origin_ringworld_start_02
					has_origin = origin_ringworld_start_03
				}
			}
		}
		solar_system = {
			every_system_planet = {
				if = {
					limit = { is_planet_class = pc_ringworld_habitable }
					set_planet_entity = {
						graphical_culture = prevprev
						entity = ringworld_habitable_entity_01_entity
					}
					add_deposit = d_arcane_generator
					add_deposit = d_decrepit_tunnels_1
					add_deposit = d_decrepit_tunnels_2
					add_deposit = d_decrepit_tunnels_3
				}
				if = {
					limit = { is_planet_class = pc_ringworld_seam }
					set_planet_entity = {
						graphical_culture = prevprev
						entity = ringworld_seam_entity_01_entity
					}
				}
				if = {
					limit = { is_planet_class = pc_ringworld_tech }
					set_planet_entity = {
						graphical_culture = prevprev
						entity = ringworld_tech_entity_01_entity
					}
				}
			}
		}
		add_building = 	building_dimensional_fabricator
		add_district_and_planet_size_if_needed_effect = {
			district = district_rw_farming
		}

		if = {
			limit = {
				owner = {
					is_lithoid_empire = yes
					NOT = { has_civic = civic_hive_devouring_swarm }
				}
			}
			while = {
				count = 4
				add_deposit = d_hibernating_lithoids
			}
		}

		if = {
			limit = {
				owner = {
					is_lithoid_empire = yes
					has_civic = civic_hive_devouring_swarm
				}
			}
			while = {
				count = 2
				add_deposit = d_hibernating_lithoids
			}
		}

		if = {
			limit = {
				owner = {
					is_lithoid_empire = yes
					is_hive_empire = yes
				}
			}
			remove_district = district_rw_farming
			add_district_and_planet_size_if_needed_effect = {
				district = district_rw_generator
			}
		}

		if = {
			limit = { owner = { is_regular_empire = yes } }

			# 3 jobs
			add_building = building_capital

			# 2 jobs
			add_building = building_bureaucratic_1

			# 2 jobs
			add_building = building_research_lab_1

			# 2 jobs
			add_building = building_foundry_1

			# 2 jobs
			add_building = building_factory_1
			add_building = building_luxury_residence
			if = {
				limit = { owner = { has_valid_civic = civic_synthetic_evolution } }
				remove_district = district_rw_farming
				add_district_and_planet_size_if_needed_effect = {
					district = district_rw_commercial
				}
			}

			# 5 jobs
			if = {
				limit = { owner = { is_megacorp = yes } }
				add_building = building_commercial_zone
			}
		}

		if = {
			limit = { owner = { is_hive_empire = yes } }

			# 5 jobs
			add_building = building_hive_capital

			# 2 jobs
			add_building = building_hive_node

			# 2 jobs
			add_building = building_research_lab_1

			# 2 jobs
			add_building = building_foundry_1

			# 1 job
			add_building = building_spawning_pool

			# 1 job
			add_building = building_hive_warren
		}

		# Replace capital building for machine empires
		if = {
			limit = { owner = { is_machine_empire = yes } }
			remove_district = district_rw_farming
			add_district = district_rw_generator

			# 6 jobs
			add_building = building_machine_capital

			# 1 job
			add_building = building_machine_assembly_plant

			# 2 job
			add_building = building_uplink_node

			# 2 jobs
			add_building = building_research_lab_1

			# 2 jobs
			add_building = building_foundry_1

			#Assimilators
			if = {
				limit = { owner = { has_civic = civic_machine_assimilator } }
				add_district_and_planet_size_if_needed_effect = {
					district = district_rw_farming
				}
				add_deposit = d_segment_rubble_1
				add_deposit = d_segment_rubble_1
				add_deposit = d_segment_rubble_2
				add_deposit = d_segment_rubble_2
			}

			#Servitors
			if = {
				limit = { owner = { has_civic = civic_machine_servitor } }
				add_building = building_organic_sanctuary
				add_district_and_planet_size_if_needed_effect = {
					district = district_rw_farming
				}
				add_deposit = d_segment_rubble_1
				add_deposit = d_segment_rubble_1
				add_deposit = d_segment_rubble_2
				add_deposit = d_segment_rubble_2
			}
		}
	}
	
	# Additional resources based on empire type and possible subspecies
	owner = {
		if = {
			limit = {
				has_authority = auth_machine_intelligence
			}
			if = {
				limit = {
					OR = {
						has_valid_civic = civic_machine_servitor
						has_valid_civic = civic_machine_assimilator
					}
				}
				if = {
					limit = { has_country_flag = lithoid_subspecies }
					add_resource = { minerals = 100	}
					add_resource = { energy = 100 }
				}
				else = {
					add_resource = { food = 100	}
					add_resource = { energy = 100 }
				}
			}
			else = {
				add_resource = { energy = 200 }
			}
		}
		else = {
			if = {
				limit = { is_lithoid_empire = no }
				if = {
					limit = { has_country_flag = lithoid_subspecies }
					add_resource = { food = 100	}
					add_resource = { minerals = 100 }
				}
				else = {
					add_resource = { food = 200 }
				}
			}
			else = {
				if = {
					limit = { has_country_flag = non_lithoid_subspecies }
					add_resource = { food = 100	}
					add_resource = { minerals = 100 }
				}
				else = {
					add_resource = { minerals = 200 }
				}
			}
		}
	}
}

generate_start_pops = {
	if = {
		limit = {
			owner = {
				OR = {
					has_origin = origin_syncretic_evolution
					has_valid_civic = civic_machine_servitor
					has_valid_civic = civic_machine_assimilator
					has_valid_civic = civic_synthetic_evolution
					has_valid_civic = civic_hivekeeper
				}
			}
		}

		if = { limit = { last_created_species = { is_species_class = MACHINE } }
			modify_species = {
				species = last_created_species
				add_trait = trait_machine_unit
				add_traits_at_start_of_list = yes
			}
			last_created_species = { save_event_target_as = last_created_species }
		}

		if = {
			limit = { owner = { has_origin = origin_syncretic_evolution } }

			last_created_species = {
				set_species_flag = syncretic_species@root.owner
				set_citizenship_type = {
					country = root.owner
					type = citizenship_slavery
				}
			}
			while = {
				count = 12
				create_pop = {
					species = last_created_species
					ethos = random
				}
			}
		}

		if = {
			limit = { owner = { has_valid_civic = civic_hivekeeper } }
			owner = {
				set_country_flag = get_hive_mind
				set_country_flag = found_presapients
				set_policy = {
					policy = hive_mind_pop
					option = servitude_hive_mind_pop
					cooldown = no
				}
			}
			last_created_species = {
				save_event_target_as = secend_species
				set_species_flag = secend_species_hive
			}
			while = {
				count = 4
				create_pop = {
					species = last_created_species
					ethos = random
				}
			}
			if = {
				limit = {
					owner = { is_lithoid_empire = yes }
					event_target:secend_species = { is_lithoid = yes }
				}
				event_target:secend_species = {
					create_species = {
						name = this
						plural = this
						portrait = this
						homeworld = this
						class = this
						traits = {
							trait = trait_hive_mind
							trait = trait_industrious
						}
						effect = {
							root = {
								modify_species = {
									species = this
									base = event_target:secend_species
								}
							}
						}
					}
				}
				last_created_species = { save_event_target_as = miner_species }
				event_target:miner_species = {
					set_species_flag = secend_species_hive_livestock
					set_citizenship_type = {
						country = root.owner
						type = citizenship_slavery
					}
					set_slavery_type = {
						type = slavery_livestock
						country = root.owner
						cooldown = no
					}
				}
				while = {
					count = 8
					create_pop = {
						species = event_target:miner_species
						ethos = random
					}
				}
				remove_district = district_mining
				remove_district = district_mining
				remove_district = district_mining
				remove_district = district_mining
			}
			if = {
				limit = {
					owner = { is_lithoid_empire = yes }
					event_target:secend_species = { is_lithoid = no }
				}
				event_target:secend_species = {
					create_species = {
						name = this
						plural = this
						portrait = this
						homeworld = this
						class = this
						traits = {
							trait = trait_hive_mind
							trait = trait_industrious
						}
						effect = {
							owner = {
								modify_species = {
									species = this
									base = event_target:secend_species
								}
							}
						}
					}
				}
				last_created_species = { save_event_target_as = miner_species }
				event_target:miner_species = {
					set_citizenship_type = {
						country = root.owner
						type = citizenship_slavery
					}
					set_slavery_type = {
						type = slavery_normal
						country = root.owner
						cooldown = no
					}
				}
				event_target:secend_species = {
					create_species = {
						name = this
						plural = this
						portrait = this
						homeworld = this
						class = this
						traits = {
							trait = trait_hive_mind
							trait = trait_agrarian
							trait = trait_delicious
						}
						effect = {
							root = {
								modify_species = {
									species = this
									base = event_target:secend_species
								}
							}
						}
					}
				}
				last_created_species = { save_event_target_as = delicious_species }
				event_target:delicious_species = {
					set_species_flag = secend_species_hive_livestock
					set_citizenship_type = {
						country = root.owner
						type = citizenship_slavery
					}
					set_slavery_type = {
						type = slavery_livestock
						country = root.owner
						cooldown = no
					}
				}
				while = {
					count = 6
					create_pop = {
						species = event_target:miner_species
						ethos = random
					}
				}
				while = {
					count = 2
					create_pop = {
						species = event_target:delicious_species
						ethos = random
					}
				}
				remove_district = district_mining
			}
			if = {
				limit = {
					owner = { is_lithoid_empire = no }
					event_target:secend_species = { is_lithoid = yes }
				}
				event_target:secend_species = {
					create_species = {
						name = this
						plural = this
						portrait = this
						homeworld = this
						class = this
						traits = {
							trait = trait_hive_mind
							trait = trait_industrious
						}
						effect = {
							owner = {
								modify_species = {
									species = this
									base = event_target:secend_species
								}
							}
						}
					}
				}
				last_created_species = { save_event_target_as = miner_species }
				event_target:secend_species = {
					create_species = {
						name = this
						plural = this
						portrait = this
						homeworld = this
						class = this
						traits = {
							trait = trait_hive_mind
							trait = trait_lithoid_scintillating
						}
						effect = {
							owner = {
								modify_species = {
									species = this
									base = event_target:secend_species
								}
							}
						}
					}
				}
				last_created_species = { save_event_target_as = delicious_species_1 }
				event_target:secend_species = {
					create_species = {
						name = this
						plural = this
						portrait = this
						homeworld = this
						class = this
						traits = {
							trait = trait_hive_mind
							trait = trait_lithoid_gaseous_byproducts
						}
						effect = {
							owner = {
								modify_species = {
									species = this
									base = event_target:secend_species
								}
							}
						}
					}
				}
				last_created_species = { save_event_target_as = delicious_species_2 }
				event_target:secend_species = {
					create_species = {
						name = this
						plural = this
						portrait = this
						homeworld = this
						class = this
						traits = {
							trait = trait_hive_mind
							trait = trait_lithoid_volatile_excretions
						}
						effect = {
							owner = {
								modify_species = {
									species = this
									base = event_target:secend_species
								}
							}
						}
					}
				}
				last_created_species = { save_event_target_as = delicious_species_3 }
				event_target:miner_species = {
					set_species_flag = secend_species_hive_livestock
					set_citizenship_type = {
						country = root.owner
						type = citizenship_slavery
					}
					set_slavery_type = {
						type = slavery_livestock
						country = root.owner
						cooldown = no
					}
				}
				event_target:delicious_species_1 = {
					set_citizenship_type = {
						country = root.owner
						type = citizenship_slavery
					}
					set_slavery_type = {
						type = slavery_normal
						country = root.owner
						cooldown = no
					}
				}
				event_target:delicious_species_2 = {
					set_citizenship_type = {
						country = root.owner
						type = citizenship_slavery
					}
					set_slavery_type = {
						type = slavery_normal
						country = root.owner
						cooldown = no
					}
				}
				event_target:delicious_species_3 = {
					set_citizenship_type = {
						country = root.owner
						type = citizenship_slavery
					}
					set_slavery_type = {
						type = slavery_normal
						country = root.owner
						cooldown = no
					}
				}
				while = {
					count = 4
					create_pop = {
						species = event_target:miner_species
						ethos = random
					}
				}
				while = {
					count = 1
					create_pop = {
						species = event_target:delicious_species_1
						ethos = random
					}
					create_pop = {
						species = event_target:delicious_species_2
						ethos = random
					}
					create_pop = {
						species = event_target:delicious_species_3
						ethos = random
					}
					random_list = {
						1 = { create_pop = { species = event_target:delicious_species_1 ethos = random } }
						1 = { create_pop = { species = event_target:delicious_species_2 ethos = random } }
						1 = { create_pop = { species = event_target:delicious_species_3 ethos = random } }
					}
				}
				remove_district = district_mining
				remove_district = district_mining
				while = {
					count = 2
					add_district_and_planet_size_if_needed_effect = {
						district = district_farming
					}
				}
			}
			if = {
				limit = {
					owner = { is_lithoid_empire = no }
					event_target:secend_species = { is_lithoid = no }
				}
				event_target:secend_species = {
					create_species = {
						name = this
						plural = this
						portrait = this
						homeworld = this
						class = this
						traits = {
							trait = trait_hive_mind
							trait = trait_industrious
						}
						effect = {
							owner = {
								modify_species = {
									species = this
									base = event_target:secend_species
								}
							}
						}
					}
				}
				last_created_species = { save_event_target_as = miner_species }
				event_target:secend_species = {
					create_species = {
						name = this
						plural = this
						portrait = this
						homeworld = this
						class = this
						traits = {
							trait = trait_hive_mind
							trait = trait_agrarian
							trait = trait_delicious
						}
						effect = {
							owner = {
								modify_species = {
									species = this
									base = event_target:secend_species
								}
							}
						}
					}
				}
				last_created_species = { save_event_target_as = delicious_species }
				event_target:miner_species = {
					set_citizenship_type = {
						country = root.owner
						type = citizenship_slavery
					}
					set_slavery_type = {
						type = slavery_normal
						country = root.owner
						cooldown = no
					}
				}
				event_target:delicious_species = {
					set_species_flag = secend_species_hive_livestock
					set_citizenship_type = {
						country = root.owner
						type = citizenship_slavery
					}
					set_slavery_type = {
						type = slavery_livestock
						country = root.owner
						cooldown = no
					}
				}
				while = {
					count = 4
					create_pop = {
						species = event_target:miner_species
						ethos = random
					}
				}
				while = {
					count = 4
					create_pop = {
						species = event_target:delicious_species
						ethos = random
					}
				}
			}
		}
		
		if = { 
			limit = { owner = { has_valid_civic = civic_machine_servitor } }
			last_created_species = {
				set_citizenship_type = {
					country = root.owner
					type = citizenship_limited
				}
				set_living_standard = {
					country = root.owner
					type = living_standard_organic_trophy
				}
				set_species_flag = dominant_master_species@from
			}
			while = {
				count = 8
				create_pop = {
					species = last_created_species
					ethos = random
				}
				last_created_pop = {
					clear_ethos = yes
				}
			}
		}

		if = {
			limit = { owner = { has_valid_civic = civic_machine_assimilator } }
			last_created_species = {
				set_citizenship_type = {
					country = root.owner
					type = citizenship_full_machine
				}
				set_living_standard = {
					country = root.owner
					type = living_standard_hive_mind
				}
			}
			while = {
				count = 10
				create_pop = {
					species = last_created_species
					ethos = random
				}
				last_created_pop = {
					clear_ethos = yes
				}
			}
		}

		if = {
			limit = { owner = { has_valid_civic = civic_synthetic_evolution } }
			owner = {
				set_country_flag = synthetic_empire
				set_country_flag = synthetic_age
				set_policy = {
					policy = artificial_intelligence_policy
					option = ai_full_rights
					cooldown = no
				}
				set_policy = {
					policy = robot_machine_pop
					option = servitude_robot_machine_pop
					cooldown = no
				}
				set_built_species = last_created_species
				last_created_species = { set_species_flag = mechanical_species@prev }
			}
			last_created_species = {
				set_citizenship_type = {
					country = root.owner
					type = citizenship_robot_servitude
				}
				set_living_standard = {
					country = root.owner
					type = living_standard_hive_mind
				}
			}
			if = {
				limit = { owner = { is_ai = yes } }
				add_building = building_robot_assembly_plant
			}
			if = {
				limit = { owner = { NOT = { has_origin = origin_machine_worlds } } }
				add_district_and_planet_size_if_needed_effect = {
					district = district_generator
				}
			}
			remove_district = district_farming
			remove_district = district_farming
			while = {
				count = 7
				create_pop = {
					species = last_created_species
					ethos = random
				}
				last_created_pop = {
					clear_ethos = yes
				}
			}
			while = {
				limit = { num_pops < 27 }
				create_pop = {
					species = owner_main_species
					ethos = random
				}
			}
			if = {
				limit = {
					owner = {
						has_valid_civic = civic_gestalt_terminator
						is_ai = yes
					}
				}
				while = {
					count = 4
					create_pop = {
						species = owner_main_species
						ethos = random
					}
				}
			}
		}

		if = {
			limit = { owner = { has_civic = civic_hive_devouring_swarm } }
			owner = {
				species = {
					set_species_flag = main_hive_species@prev
				}
			}
		}
	}

	if = {
		limit = { owner = { has_origin = origin_mechanists } }
		owner = {
			last_created_species = { set_species_flag = mechanical_species@prev }
			set_built_species = last_created_species
		}
		while = {
			count = 7
			create_pop = {
				species = last_created_species
			}
		}

		add_building = building_robot_assembly_plant
		add_district_and_planet_size_if_needed_effect = {
			district = district_generator
		}
		while = {
			limit = { num_pops < 27 }
			create_pop = {
				species = owner_main_species
				ethos = random
			}
		}
	}
	if = {
		limit = { owner = { is_hive_empire = yes } }
		while = {
			limit = { num_pops < 34 }
			create_pop = {
				species = owner_main_species
				ethos = random
			}
		}
	}
	if = {
		limit = { owner = { has_valid_civic = civic_machine_servitor } }
		while = {
			limit = { num_pops < 36 }
			create_pop = {
				species = owner_main_species
				ethos = random
			}
		}
	}
	if = {
		limit = { owner = { has_valid_civic = civic_hivekeeper } }
		while = {
			limit = { num_pops < 28 }
			create_pop = {
				species = owner_main_species
				ethos = random
			}
		}				
	}
	if = {
		limit = { owner = { has_origin = origin_the_last_of_us } }
		owner = {
			last_created_species = { set_species_flag = mechanical_species@prev }
			set_built_species = last_created_species
		}
		while = {
			count = 27
			create_pop = {
				species = last_created_species
			}
		}

		add_building = building_robot_assembly_plant
		add_district_and_planet_size_if_needed_effect = {
			district = district_generator
		}
	}
	if = {
		limit = { owner = { is_machine_empire = yes } }
		while = {
			limit = { num_pops < 29 }
			create_pop = {
				species = owner_main_species
				ethos = random
			}
		}
	}
	if = {
		limit = { owner = { is_megacorp = yes } }
		while = {
			limit = { num_pops < 30 }
			create_pop = {
				species = owner_main_species
				ethos = random
			}
		}
	}
	if = {
		limit = { owner = { is_regular_empire = yes } }
		while = {
			limit = { num_pops < 28 }
			create_pop = {
				species = owner_main_species
				ethos = random
			}
		}
	}
	if = {
		limit = {
			owner = { has_origin = origin_default }
			owner = { is_regular_empire = yes }
		}
		while = {
			limit = { num_pops < 32 }
			create_pop = {
				species = owner_main_species
				ethos = random
			}
		}
	}
	if = {
		limit = {
			owner = { has_origin = origin_default }
			owner = { is_machine_empire = yes }
		}
		while = {
			limit = { num_pops < 33 }
			create_pop = {
				species = owner_main_species
				ethos = random
			}
		}
	}
	if = {
		limit = {
			owner = { has_origin = origin_default }
			owner = { is_hive_empire = yes }
		}
		while = {
			limit = { num_pops < 35 }
			create_pop = {
				species = owner_main_species
				ethos = random
			}
		}
	}
	if = {
		limit = {
			owner = { has_origin = origin_default }
			owner = { is_megacorp = yes }
		}
		while = {
			limit = { num_pops < 34 }
			create_pop = {
				species = owner_main_species
				ethos = random
			}
		}
	}
	if = {
		limit = {
			owner = { has_origin = origin_default }
			owner = { has_valid_civic = civic_machine_servitor }
		}
		while = {
			limit = { num_pops < 43 }
			create_pop = {
				species = owner_main_species
				ethos = random
			}
		}
	}
	if = {
		limit = {
			owner = { has_origin = origin_default }
			owner = { has_valid_civic = civic_machine_assimilator }
		}
		while = {
			limit = { num_pops < 33 }
			create_pop = {
				species = owner_main_species
				ethos = random
			}
		}
	}
}